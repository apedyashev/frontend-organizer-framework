// Generated by CoffeeScript 1.7.1
var __slice = [].slice,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

if (window.Rrs == null) {
  window.Rrs = {};
}

Rrs.mixOf = function() {
  var Mixed, base, method, mixin, mixins, name, _i, _ref;
  base = arguments[0], mixins = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
  Mixed = (function(_super) {
    __extends(Mixed, _super);

    function Mixed() {
      return Mixed.__super__.constructor.apply(this, arguments);
    }

    return Mixed;

  })(base);
  for (_i = mixins.length - 1; _i >= 0; _i += -1) {
    mixin = mixins[_i];
    _ref = mixin.prototype;
    for (name in _ref) {
      method = _ref[name];
      Mixed.prototype[name] = method;
    }
  }
  return Mixed;
};

Rrs.Obj = (function() {
  function Obj() {}

  Obj.getClass = function(inObject) {
    var className, objectType;
    objectType = (typeof inObject).toLowerCase();
    if (objectType === "function") {
      className = /^function\s(\w+)/.exec(inObject)[1];
    } else if (objectType === "object") {
      className = /(\w+)\(/.exec(inObject.constructor.toString())[1];
    } else {
      className = false;
    }
    return className;
  };

  Obj.extend = function(object, properties) {
    var key, val;
    if (object == null) {
      object = {};
    }
    if (properties == null) {
      properties = {};
    }
    for (key in properties) {
      val = properties[key];
      object[key] = val;
    }
    return object;
  };

  return Obj;

})();

Rrs.Util = {
  isString: function(object) {
    return (typeof object).toLowerCase() === 'string';
  },
  isObject: function(object) {
    return (typeof object).toLowerCase() === 'object';
  },
  isFunction: function(object) {
    return (typeof object).toLowerCase() === 'function';
  },
  isJQeryObject: function(object) {
    return object instanceof jQuery;
  }
};
