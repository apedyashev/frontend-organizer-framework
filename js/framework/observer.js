// Generated by CoffeeScript 1.7.1
if (window.Rrs == null) {
  window.Rrs = {};
}

Rrs.Observer = (function() {
  var instance, _listeners;

  instance = null;

  _listeners = {};

  Observer.instance = function() {
    return instance != null ? instance : instance = new Rrs.Observer;
  };

  function Observer() {}

  Observer.prototype.emit = function(inNamespace, inSignalName, inData) {
    var namespacedSignal, _ref, _ref1;
    namespacedSignal = "" + inNamespace + ":" + inSignalName;
    if (_listeners[namespacedSignal] != null) {
      Rrs.logger.debug("Emitting namespaced signal " + namespacedSignal + ".", _listeners);
      if ((_ref = _listeners[namespacedSignal].callback) != null) {
        _ref.call(_listeners[namespacedSignal].context, inData);
      }
    }
    if (_listeners[inSignalName] != null) {
      Rrs.logger.debug("Emitting broadcast signal " + namespacedSignal + ".", _listeners);
      return (_ref1 = _listeners[inSignalName].callback) != null ? _ref1.call(_listeners[inSignalName].context, inData) : void 0;
    }
  };

  Observer.prototype.listen = function(inNamespace, inSignalName, callback, context) {
    var signal;
    if (inNamespace) {
      signal = "" + inNamespace + ":" + inSignalName;
    } else {
      signal = inSignalName;
    }
    if (context == null) {
      throw new Error("Conext is not set for " + signal);
    }
    if (callback == null) {
      throw new Error("Callback is not set for " + signal);
    }
    Rrs.logger.debug("Attaching listener to " + signal + " signal.", _listeners);
    return _listeners[signal] = {
      callback: callback,
      context: context
    };
  };

  return Observer;

})();
